# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the action will run. 
on:
  issues:
    types: [opened]
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    continue-on-error: true
    runs-on: windows-latest
    
    strategy:
      fail-fast: false
      matrix:
         commit_ind: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199]
#          commit_ind: [0, 50]
    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2
      
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.9

      - name: Checkout javadiff
        uses: actions/checkout@v2
        with:
          repository: amir9979/javadiff
          path: .
          fetch-depth: 0

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pytest 
          pip install gitpython
          pip install jira
          pip install termcolor 
          pip install openpyxl  
          pip install javalang
          pip install pathlib
          pip install junitparser
          pip install pandas
          pip install numpy
          pip install pydriller
          pip install dataclasses
          pip install jsons

      - name: javadiff_install
        run: python ./setup.py install
              
      - uses: actions/setup-java@v2
        with:
          distribution: 'adopt' 
          java-version: '11'

      - uses: actions/setup-java@v2
        with:
          distribution: 'adopt' 
          java-version: '8'    
          
      - name: Checkout tools repo
        continue-on-error: true
        uses: actions/checkout@v2
        with:
          repository: ${{github.event.issue.title}}
          path: ./local_repo
          fetch-depth: 0
          
      - name: execute
        run: python ./javadiff/jit_main.py ${{ matrix.commit_ind }}

      - name: Upload data
        if: ${{ always() }}
        uses: actions/upload-artifact@v2
        with:
          # Artifact name
          name: results
          # A file, directory or wildcard pattern that describes what to upload
          path: ./results
          
#       - name: Upload data SyntheticExample
#         if: ${{ always() }}
#         uses: actions/upload-artifact@v2
#         with:
#           # Artifact name
#           name: SyntheticExample
#           # A file, directory or wildcard pattern that describes what to upload
#           path: ./SyntheticExample
          
  aggregate:
      # The type of runner that the job will run on
      runs-on: ubuntu-latest
      continue-on-error: true
      needs: build
  
      steps:
      
        - uses: actions/checkout@v2

        - name: Set up Python
          uses: actions/setup-python@v2
          with:
            python-version: 3.7

        - name: Install dependencies
          run: |
            python -m pip install --upgrade pip
            pip install pytest 
            pip install gitpython
            pip install jira
            pip install termcolor 
            pip install openpyxl  
            pip install javalang
            pip install pathlib
            pip install junitparser
            pip install pandas
            pip install numpy
            pip install pydriller

        - uses: actions/download-artifact@v2
        
        - name: Display structure of downloaded files
          run: ls -R

        - name: merge all artifacts
          shell: python
          run: |
              import pandas as pd
              import glob
              all_files = glob.glob("./results/*.csv")
              li = []
              for filename in all_files:
                  df = pd.read_csv(filename, index_col=None, header=0)
                  li.append(df)
              pd.concat(li, axis=0, ignore_index=True).to_csv('./results/all.csv', index=False)

#         - name: Zip artifact for SyntheticExample
#           run: zip SyntheticExample.zip './SyntheticExample/* -r

#         - name: Upload artifact for deployment job
#           uses: actions/upload-artifact@v2
#           with:
#             name: node-app
#             path: SyntheticExample.zip

        - name: Upload data
          if: ${{ always() }}
          uses: actions/upload-artifact@v2
          with:
            # Artifact name
            name: all_data
            # A file, directory or wildcard pattern that describes what to upload
            path: ./results/all.csv
   
#         - name: Upload data repo
#           if: ${{ always() }}
#           uses: actions/upload-artifact@v2
#           with:
#             name: repo
#             path: ./SyntheticExample/
            
        - uses: geekyeggo/delete-artifact@v1
          with:
            name: results
